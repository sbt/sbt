/**
 * This code is generated using [[https://www.scala-sbt.org/contraband/ sbt-contraband]].
 */

// DO NOT EDIT MANUALLY
package sbt.internal.bsp
/**
 * @param uri Either a text document or a directory. A directory entry must end with a forward
              slash "/" and a directory entry implies that every nested text document within the
              directory belongs to this source item.
              
 * @param kind Type of file of the source item, such as whether it is file or directory.
 * @param generated Indicates if this source is automatically generated by the build and is not
                    intended to be manually edited by the user.
 */
final class SourceItem private (
  val uri: java.net.URI,
  val kind: Int,
  val generated: Boolean) extends Serializable {
  
  
  
  override def equals(o: Any): Boolean = this.eq(o.asInstanceOf[AnyRef]) || (o match {
    case x: SourceItem => (this.uri == x.uri) && (this.kind == x.kind) && (this.generated == x.generated)
    case _ => false
  })
  override def hashCode: Int = {
    37 * (37 * (37 * (37 * (17 + "sbt.internal.bsp.SourceItem".##) + uri.##) + kind.##) + generated.##)
  }
  override def toString: String = {
    "SourceItem(" + uri + ", " + kind + ", " + generated + ")"
  }
  private[this] def copy(uri: java.net.URI = uri, kind: Int = kind, generated: Boolean = generated): SourceItem = {
    new SourceItem(uri, kind, generated)
  }
  def withUri(uri: java.net.URI): SourceItem = {
    copy(uri = uri)
  }
  def withKind(kind: Int): SourceItem = {
    copy(kind = kind)
  }
  def withGenerated(generated: Boolean): SourceItem = {
    copy(generated = generated)
  }
}
object SourceItem {
  
  def apply(uri: java.net.URI, kind: Int, generated: Boolean): SourceItem = new SourceItem(uri, kind, generated)
}
